{"version":3,"sources":["images/a_negat.svg","images/a_posit.svg","images/ab_negat.svg","images/ab_posit.svg","images/b_negat.svg","images/b_posit.svg","images/o_negat.svg","images/o_posit.svg","images/bloodIcon.png","services/api.js","components/NotificationItem/index.js","components/NotificationForm/index.js","pages/Notifications/index.js","pages/Map/index.js","components/Header/index.js","routes.js","index.js"],"names":["module","exports","api","axios","create","baseURL","NotificationItem","data","tratarDuasCasas","value","length","returnTreatedDate","stringDate","dateObject","Date","dia","String","getDate","mes","getMonth","hora","getHours","minuto","getMinutes","getFullYear","className","text","dataInicio","dataFim","endereco","NotificationForm","onSubmit","useState","setText","setEndereco","distancia","setDistancia","latitude","setLatitude","longitude","setLongitude","startDate","setStartDate","finalDate","setFinalDate","handleColor","time","e","a","preventDefault","console","log","texto","currentRegion","useEffect","navigator","geolocation","getCurrentPosition","position","coords","err","timeout","htmlFor","name","id","onChange","target","showTimeSelect","selected","date","timeClassName","locale","dateFormat","style","marginBottom","type","Notifications","notifications","setNotifications","post","response","get","loadNotifications","map","notification","index","key","registerLocale","pt","Marker","makeStyles","theme","root","display","formControl","children","Map","center","lat","lng","zoom","mapsData","donors","setDonors","aPositive","setAPositive","aNegative","setANegative","bPositive","setBPositive","bNegative","setBNegative","abPositive","setAbPositive","abNegative","setAbNegative","oPositive","setOPositive","oNegative","setONegative","getDonors","height","width","FormControl","component","FormGroup","FormControlLabel","control","Checkbox","checked","label","bootstrapURLKeys","defaultCenter","defaultZoom","filter","donor","bloodType","tipoSanguineo","_id","location","coordinates","src","aPositiveLogo","aNegativeLogo","bPositiveLogo","bNegativeLogo","abPositiveLogo","abNegativeLogo","oPositiveLogo","oNegativeLogo","alt","Header","history","logo","to","Routes","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b4d3cbb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/a_negat.d9ad38cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/a_posit.35931d6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/ab_negat.6513dd87.svg\";","module.exports = __webpack_public_path__ + \"static/media/ab_posit.a8256391.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_negat.a8bafda7.svg\";","module.exports = __webpack_public_path__ + \"static/media/b_posit.d55a0a3c.svg\";","module.exports = __webpack_public_path__ + \"static/media/o_negat.6b427e05.svg\";","module.exports = __webpack_public_path__ + \"static/media/o_posit.5ec61108.svg\";","module.exports = __webpack_public_path__ + \"static/media/bloodIcon.9e0053c5.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"http://blooddonationapp-icc.mybluemix.net/\"\n});\n\nexport default api;\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nexport default function NotificationItem({ data }) {\n    function tratarDuasCasas(value) {\n        if (value.length < 2) {\n            return `0${value}`;\n        }\n        return value;\n    }\n\n    function returnTreatedDate(stringDate) {\n        const dateObject = new Date(stringDate);\n\n        const dia = tratarDuasCasas(String(dateObject.getDate()));\n        const mes = tratarDuasCasas(String(dateObject.getMonth() + 1));\n        const hora = tratarDuasCasas(String(dateObject.getHours()));\n        const minuto = tratarDuasCasas(String(dateObject.getMinutes()));\n\n        const returnString = `${dia}/${mes}/${dateObject.getFullYear()} as ${hora}:${minuto}h`;\n        // console.log(returnString);\n\n        return returnString;\n    }\n\n    return (\n        <li className=\"dev-item\">\n            <header>\n                {/* <img src={dev.avatar_url} alt={dev.name} /> */}\n                <div className=\"user-info\">\n                    <strong>{data.text}</strong>\n                    {/* <span className>Tecnologias</span> */}\n                </div>\n            </header>\n            <p>Início: {returnTreatedDate(data.dataInicio)} </p>\n            <p>Fim: {returnTreatedDate(data.dataFim)} </p>\n            <p>Local: {data.endereco}</p>\n        </li>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport \"./styles.css\";\n\nimport pt from \"date-fns/locale/pt\";\nregisterLocale(\"pt\", pt);\n\nexport default function NotificationForm({ onSubmit }) {\n    const [text, setText] = useState(\"\");\n    const [endereco, setEndereco] = useState(\"\");\n    const [distancia, setDistancia] = useState(10000);\n    const [latitude, setLatitude] = useState(\"\");\n    const [longitude, setLongitude] = useState(\"\");\n    const [startDate, setStartDate] = useState(null);\n    const [finalDate, setFinalDate] = useState(null);\n\n    let handleColor = time => {\n        return time.getHours() > 12 ? \"text-success\" : \"text-error\";\n    };\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(\n            position => {\n                const { latitude, longitude } = position.coords;\n\n                setLatitude(latitude);\n                setLongitude(longitude);\n            },\n            err => {\n                console.log(err);\n            },\n            {\n                timeout: 30000\n            }\n        );\n    }, []);\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n        console.log(\"Chegou\");\n\n        await onSubmit({\n            texto: text,\n            currentRegion: { latitude, longitude },\n            distancia,\n            dataInicio: startDate,\n            dataFim: finalDate,\n            endereco\n        });\n\n        setText(\"\");\n        setStartDate(null);\n        setFinalDate(null);\n        setEndereco(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"input-block\">\n                <label htmlFor=\"github_username\">MENSAGEM</label>\n                <input\n                    name=\"github_username\"\n                    id=\"github_username\"\n                    value={text}\n                    onChange={e => setText(e.target.value)}\n                ></input>\n            </div>\n\n            <div className=\"input-block\">\n                <label htmlFor=\"techs\">DATA INÍCIO</label>\n                <DatePicker\n                    showTimeSelect\n                    selected={startDate}\n                    onChange={date => setStartDate(date)}\n                    timeClassName={handleColor}\n                    locale=\"pt\"\n                    dateFormat=\"dd/MM/yyyy, hh:mm a\"\n                />\n            </div>\n\n            <div className=\"input-block\">\n                <label htmlFor=\"techs\">DATA FIM</label>\n                <DatePicker\n                    showTimeSelect\n                    selected={finalDate}\n                    onChange={date => setFinalDate(date)}\n                    timeClassName={handleColor}\n                    locale=\"pt\"\n                    dateFormat=\"dd/MM/yyyy, hh:mm a\"\n                />\n            </div>\n\n            <div className=\"input-block\">\n                <label htmlFor=\"techs\">ENDEREÇO</label>\n                <input\n                    name=\"techs\"\n                    id=\"techs\"\n                    value={endereco}\n                    onChange={e => setEndereco(e.target.value)}\n                ></input>\n            </div>\n\n            <div className=\"input-group\" style={{ marginBottom: 20 }}>\n                <div className=\"input-block\">\n                    <label htmlFor=\"latitude\">LATITUDE</label>\n                    <input\n                        type=\"number\"\n                        name=\"latitude\"\n                        id=\"latitude\"\n                        value={latitude}\n                        onChange={e => setLatitude(e.target.value)}\n                    ></input>\n                </div>\n\n                <div className=\"input-block\">\n                    <label htmlFor=\"longitude\">LONGITUDE</label>\n                    <input\n                        type=\"number\"\n                        name=\"longitude\"\n                        id=\"longitude\"\n                        value={longitude}\n                        onChange={e => setLongitude(e.target.value)}\n                    ></input>\n                </div>\n            </div>\n\n            <div className=\"input-block\">\n                <label htmlFor=\"techs\">DISTÂNCIA DO ALERTA</label>\n                <input\n                    type=\"number\"\n                    name=\"techs\"\n                    id=\"techs\"\n                    value={distancia}\n                    onChange={e => setDistancia(e.target.value)}\n                ></input>\n            </div>\n\n            <button type=\"submit\">Salvar</button>\n        </form>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport api from \"../../services/api\";\n\nimport \"./styles.css\";\nimport \"./App.css\";\nimport \"./Sidebar.css\";\nimport \"./Main.css\";\nimport \"../../global.css\";\n\nimport NotificationItem from \"../../components/NotificationItem\";\nimport NotificationForm from \"../../components/NotificationForm\";\n\nexport default function Notifications() {\n    const [notifications, setNotifications] = useState([]);\n\n    useEffect(() => {\n        async function loadNotifications() {\n            const response = await api.get(\"/getNotifications\");\n\n            setNotifications(response.data);\n        }\n\n        loadNotifications();\n    }, []);\n\n    async function handleAddNotification(data) {\n        console.log(\"Chegou aqui também\", data);\n        const response = await api.post(\"/addNotification\", data);\n\n        setNotifications([response.data[0], ...notifications]);\n    }\n\n    return (\n        <div className=\"app\">\n            <aside>\n                <strong className=\"titleForm\">Adicionar Notificação</strong>\n                <NotificationForm onSubmit={handleAddNotification} />\n            </aside>\n\n            <main>\n                <ul>\n                    {notifications.map((notification, index) => (\n                        <NotificationItem key={index} data={notification} />\n                    ))}\n                </ul>\n            </main>\n        </div>\n    );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport api from \"../../services/api\";\nimport GoogleMapReact from \"google-map-react\";\n// import useSupercluster from \"use-supercluster\";\n\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport \"./styles.css\";\nimport aNegativeLogo from \"../../images/a_negat.svg\";\nimport aPositiveLogo from \"../../images/a_posit.svg\";\nimport abNegativeLogo from \"../../images/ab_negat.svg\";\nimport abPositiveLogo from \"../../images/ab_posit.svg\";\nimport bNegativeLogo from \"../../images/b_negat.svg\";\nimport bPositiveLogo from \"../../images/b_posit.svg\";\nimport oNegativeLogo from \"../../images/o_negat.svg\";\nimport oPositiveLogo from \"../../images/o_posit.svg\";\n\n//Clusterizar com o zoom\n//Filtro de tipos sanguineos\n//Fazer campo endereco opcional - OK\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\"\n    },\n    formControl: {\n        // margin: theme.spacing(3)\n    }\n}));\n\nconst Marker = ({ children }) => children;\n\nexport default function Map() {\n    const [mapsData, setMapsData] = useState({\n        center: {\n            lat: -23.5523312,\n            lng: -46.6562576\n        },\n        zoom: 13.6\n    });\n\n    const [donors, setDonors] = useState([]);\n\n    const [aPositive, setAPositive] = useState(true);\n    const [aNegative, setANegative] = useState(true);\n    const [bPositive, setBPositive] = useState(true);\n    const [bNegative, setBNegative] = useState(true);\n    const [abPositive, setAbPositive] = useState(true);\n    const [abNegative, setAbNegative] = useState(true);\n    const [oPositive, setOPositive] = useState(true);\n    const [oNegative, setONegative] = useState(true);\n\n    // const []\n\n    // const mapRef = useRef();\n    // const [zoom, setZoom] = useState(10);\n    // const [bounds, setBounds] = useState(null);\n    // const points = donors.map(donor => ({\n    //     type: \"Feature\",\n    //     properties: {\n    //         cluster: false,\n    //         donorId:\n    //     }\n    // }))\n\n    // const { clusters } = useSupercluster({\n    //     points,\n    //     bounds,\n    //     zoom,\n    //     options: {\n    //         radius: 75,\n    //         maxZoom: 20\n    //     }\n    // });\n\n    useEffect(() => {\n        async function getDonors() {\n            const { data } = await api.get(\"/getDonors\");\n\n            console.log(data);\n            setDonors(data);\n        }\n\n        getDonors();\n    }, []);\n\n    function getImageByBloodType(bloodType) {\n        if (bloodType === \"A+\" && aPositive) {\n            return aPositiveLogo;\n        } else if (bloodType === \"A-\") {\n            return aNegativeLogo;\n        } else if (bloodType === \"B+\") {\n            return bPositiveLogo;\n        } else if (bloodType === \"B-\") {\n            return bNegativeLogo;\n        } else if (bloodType === \"AB+\") {\n            return abPositiveLogo;\n        } else if (bloodType === \"AB-\") {\n            return abNegativeLogo;\n        } else if (bloodType === \"O+\") {\n            return oPositiveLogo;\n        } else if (bloodType === \"O-\") {\n            return oNegativeLogo;\n        }\n    }\n\n    function getFilter(bloodType) {\n        if (\n            (bloodType === \"A+\" && aPositive) ||\n            (bloodType === \"A-\" && aNegative) ||\n            (bloodType === \"B+\" && bPositive) ||\n            (bloodType === \"B-\" && bNegative) ||\n            (bloodType === \"AB+\" && abPositive) ||\n            (bloodType === \"AB-\" && abNegative) ||\n            (bloodType === \"O+\" && oPositive) ||\n            (bloodType === \"O-\" && oNegative)\n        ) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    return (\n        <>\n            <div style={{ height: \"100vh\", width: \"100%\" }}>\n                <div className=\"filterContainer\">\n                    <p>Filtrar por Tipo Sanguíneo</p>\n                    <div className=\"checkContainer\">\n                        <FormControl\n                            component=\"fieldset\"\n                            className=\"formControl\"\n                        >\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={aPositive}\n                                            onChange={e =>\n                                                setAPositive(e.target.checked)\n                                            }\n                                            name=\"A+\"\n                                        />\n                                    }\n                                    label=\"A+\"\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={aNegative}\n                                            onChange={e =>\n                                                setANegative(e.target.checked)\n                                            }\n                                            name=\"A-\"\n                                        />\n                                    }\n                                    label=\"A-\"\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={bPositive}\n                                            onChange={e =>\n                                                setBPositive(e.target.checked)\n                                            }\n                                            name=\"B+\"\n                                        />\n                                    }\n                                    label=\"B+\"\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={bNegative}\n                                            onChange={e =>\n                                                setBNegative(e.target.checked)\n                                            }\n                                            name=\"B-\"\n                                        />\n                                    }\n                                    label=\"B-\"\n                                />\n                            </FormGroup>\n                            {/* <FormHelperText>Be careful</FormHelperText> */}\n                        </FormControl>\n                        <FormControl\n                            component=\"fieldset\"\n                            className=\"formControl\"\n                        >\n                            <FormGroup>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={abPositive}\n                                            onChange={e =>\n                                                setAbPositive(e.target.checked)\n                                            }\n                                            name=\"AB+\"\n                                        />\n                                    }\n                                    label=\"AB+\"\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={abNegative}\n                                            onChange={e =>\n                                                setAbNegative(e.target.checked)\n                                            }\n                                            name=\"AB-\"\n                                        />\n                                    }\n                                    label=\"AB-\"\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={oPositive}\n                                            onChange={e =>\n                                                setOPositive(e.target.checked)\n                                            }\n                                            name=\"O+\"\n                                        />\n                                    }\n                                    label=\"O+\"\n                                />\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={oNegative}\n                                            onChange={e =>\n                                                setONegative(e.target.checked)\n                                            }\n                                            name=\"O-\"\n                                        />\n                                    }\n                                    label=\"O-\"\n                                />\n                            </FormGroup>\n                            {/* <FormHelperText>Be careful</FormHelperText> */}\n                        </FormControl>\n                    </div>\n                </div>\n                <GoogleMapReact\n                    bootstrapURLKeys={{\n                        key: \"AIzaSyCfCUDIMiDeHP6B-g-WNnA3wneY9IwcCIw\"\n                    }}\n                    defaultCenter={mapsData.center}\n                    defaultZoom={mapsData.zoom}\n                >\n                    {donors\n                        .filter(donor => getFilter(donor.tipoSanguineo))\n                        .map(donor => (\n                            <Marker\n                                key={donor._id}\n                                lat={donor.location.coordinates[1]}\n                                lng={donor.location.coordinates[0]}\n                            >\n                                <img\n                                    src={getImageByBloodType(\n                                        donor.tipoSanguineo\n                                    )}\n                                    height=\"45\"\n                                    width=\"40\"\n                                    alt=\"\"\n                                />\n                            </Marker>\n                        ))}\n                    {/* {donors.map(donor => (\n                        <Marker\n                            key={donor.id}\n                            lat={donor.location.coordinates[1]}\n                            lng={donor.location.coordinates[0]}\n                        >\n                            <img\n                                src={getImageByBloodType(donor.tipoSanguineo)}\n                                height=\"45\"\n                                width=\"40\"\n                                alt=\"\"\n                            />\n                        </Marker>\n                    ))} */}\n                </GoogleMapReact>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\n\nimport \"./styles.css\";\nimport logo from \"../../images/bloodIcon.png\";\n\nimport { Link } from \"react-router-dom\";\n\nexport default function Header({ history }) {\n    return (\n        <div className=\"headerContainer\">\n            <img src={logo} alt=\"\" className=\"logo\" />\n            <div className=\"headerListContainer\">\n                <ul>\n                    <li>\n                        <Link to=\"/\">Notificações</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/map\">Mapa</Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\n\nimport Notifications from \"./pages/Notifications\";\nimport Map from \"./pages/Map\";\nimport Header from \"./components/Header\";\n\nexport default function Routes() {\n    return (\n        <>\n            <BrowserRouter>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={Notifications} />\n                    <Route path=\"/map\" exact={true} component={Map} />\n                </Switch>\n            </BrowserRouter>\n        </>\n    );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./routes\";\nimport \"./global.css\";\n\nReactDOM.render(<Routes />, document.getElementById(\"root\"));\n"],"sourceRoot":""}